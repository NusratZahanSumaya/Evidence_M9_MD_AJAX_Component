@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div>
    Tst message
    <my message="Test"></my>
</div>
<div>
    <form id="createPatientForm"  >

@Html.Partial("_masterPartial")

@* <fieldset>
    <legend>Order Details</legend>
    <table id="tblOrderdetails">
        <thead>
            <tr>
                <th>ItemName</th>
                <th>Quantity</th>
                <th> Price</th>
               

            </tr>
        </thead>
        <tbody>
            <tr>
                <td>

                             @await Component.InvokeAsync("ProductDrp")
                                       
                </td>
                <td>
                    <input type="text" name="Quantity"   />
                </td>
                <td>
                    <input type="text" name="UnitPrice"  />
                </td>
                
                <td>
                    <input type="button" value="Add" name="add" id="btnadd" onclick="AddSaleOrderRow()" />
                    <input type="button" value="Delete" name="delete" id="btndelete" onclick="DeleteSaleOrderRow(this)" />
                </td>
            </tr>
        </tbody>
        <tfoot>
            <tr>
               
            <tr>
                
                <td colspan="6">
                            <input type="button" name="Save order" id="btnsave" value="save Order"   />

                </td>
                
            </tr>
        </tfoot>
    </table>
</fieldset>


 *@  
 
        @await Component.InvokeAsync("Details")
</form>
</div>
 
@section scripts{
   @*  <script src="~/lib/jquery/Jquery.js"/>
 *@
 
    <script type="text/javascript">
       
        $(document).ready(function () {
        
            $("#btndelete").hide();
            $("#btnsave").click(function(){
                // alert("clicked")

                 alert("clicked")
           
            OrderDetails = [];
            total = 0.00;
            var tblbody = $("#tblOrderdetails").find("tbody")
            tblbody.find('tr').each(function () {
                var itemName = $(this).find("td:eq(0) select[name=ProductId]").val();
                var quantity = $(this).find("td:eq(1) input[type=text]").val();
                var unitprice = $(this).find("td:eq(2) input[type=text]").val();


                OrderDetails.push({
                    "ProductId":parseInt( itemName), "Qty":parseInt( quantity), "Price":parseFloat(unitprice)
                });

            })
            debugger;
            console.log($("#ISCompleted").prop("checked"))

            order = {
                "Ordernumber": $("#txtOrdernumber").val(),
                "Customername": $("#txtcustomername").val(),
                "OrderDate": $("#Orderdate").val(),

                "IsDelivered": $("#ISCompleted").prop("checked"),
                "OrderDetails": OrderDetails,
            }
            var file = $('#ImageFile')[0].files[0];
            console.log(file)
            var reader = new FileReader();
            console.log(order)
            reader.onloadend = function () {
                console.log(reader.result)
                var base64Image = reader.result.split(',')[1];
                debugger;
                $.ajax({
                    type: 'POST',
                    headers: { "Image-Data": base64Image },
                    dataType: 'JSON',
                    url: '/Order/Create', 
                    data: JSON.stringify(order),
                    contentType: 'application/json;charset=UTF-8',
                    success: function (data) {
                        console.log(data)
                        if (data.Success) {
                            window.location.href = "/order/index"
                            alert(data.message);
                        }
                        else {
                            alert(data.message);
                        }
                    },
                    error: function (error) {
                            alert("please check image size");
                        console.log(error.result)
                        console.log(error.responseText)
                      console.log(error.result)
                    }
                });
            }
            if (file) { reader.readAsDataURL(file); }
            else { alert('Please select a file first.'); }
            })
        })
         function SaveOrderDetails() {
             alert("clicked")
            var data = new FormData();
            OrderDetails = [];
            var tblbody = $("#tblOrderdetails").find("tbody")
            tblbody.find('tr').each(function () {
                var itemName = $(this).find("td:eq(0) select[name=ProductId]").val();
                var quantity = $(this).find("td:eq(1) input[type=text]").val();
                var unitprice = $(this).find("td:eq(2) input[type=text]").val();
                

                OrderDetails.push({
                    "ProductId": itemName, "Qty": quantity, "Price": unitprice 
                });

            })

            console.log($("#ISCompleted").prop("checked"))

            order = {
                "Ordernumber": $("#txtOrdernumber").val(),
                "Customername": $("#txtcustomername").val(),
                "OrderDate": $("#Orderdate").val(),

                "IsDelivered": $("#ISCompleted").prop("checked"),
                "OrderDetails": OrderDetails,
            }
            var file = $('#ImageFile')[0].files[0];
            console.log(file)
            var reader = new FileReader();
            console.log(salesOrder)
            reader.onloadend = function () {
                console.log(reader.result)
                var base64Image = reader.result.split(',')[1];
                $.ajax({
                    type: 'POST',
                    headers: { "Image-Data": base64Image },
                    dataType: 'JSON',
                    url: '/order/Create',
                    data: JSON.stringify(order),
                    /*  data: salesOrder,*/
                    contentType: 'application/json;charset=UTF-8',
                    success: function (data) {
                        if (data.Success) {
                            alert(data.Message);
                           
                        }
                        else {
                            alert(data.Message);
                        }
                    },
                    error: function (error) {
                        alert("There is problem");
                        console.log(error)
                    }
                });
            }


            if (file) { reader.readAsDataURL(file); }
            else { alert('Please select a file first.'); }


        }
        function AddSaleOrderRow() {
            $("#btndelete").show();
            var tblbody = $("#tblOrderdetails").find("tbody")
            var tblLastRow = tblbody.find("tr:last")
            var tblClone = tblLastRow.clone().find("input[type=text]").val('').end();
            tblLastRow.after(tblClone);
            $("#btndelete").hide();

        }
        function DeleteSaleOrderRow() {
            $("#btndelete").closest("tr").remove();
           

        }
         
   
 </script>
}